
(require! (lit Physics) "sibilant-game-engine/client/systems/physics"
          (lit Collision) "sibilant-game-engine/client/systems/collision")

(require! config "../config")

(define Friction Physics.Force
        (def apply (c)
             (var v c.velocity)
             (var collision (.get c.system.process.systems Collision c.entity))
             ;; (if (or (< 100 v.xd)
             ;;         (< 100 v.yd)
             ;;         (> -100 v.xd)
             ;;         (> -100 v.yd))
             ;;     (set v
             ;;          'xd (/ v.xd config.friction)
             ;;          'yd (/ v.yd config.friction)))
             (unless collision.colliding
                     (incr-by v.xd (* -1 (+ 1 (/ v.xd config.friction))))
                     (incr-by v.yd (* -1 (+ 1 (/ v.yd config.friction)))))))

(export Friction)
