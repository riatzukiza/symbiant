(generic moore-neighborhood (def) (w h (weight 1) (c 0))
         (let m (allns w h weight))
         (set m.array (matrix-center w h) c) m)

(type Neighborhood
      (init (width height weight (kernel (moore-neighborhood width height weight))))

      (gmth resize (w h weight)
            (assign this.kernel (moore-neighborhood w h weight)
                    this.width w
                    this.height h
                    this.weight weight))

      (gmth sample (m x y kernel)

            (var wr (/ (- kernel.width 1) 2)
                 hr (/ (- kernel.height 1) 2)
                 w kernel.width
                 h kernel.height)

            (.submatrix m (- x wr) (- y hr) w h))

      (gmth count (x y state kernel)
            (var wr (/ (- kernel.width 1) 2)
                 hr (/ (- kernel.height 1) 2)
                 w kernel.width
                 h kernel.height)
            (.convolve-sub state kernel (- x wr) (- y hr))))
