(import ( create extend mixin) "../util")
(import (Entity) "./entity")
(specify Entity-group (extend Entity)
         (property groups (new Set))
         (init (entity-type (entities (new Set)) groups)
               (.add groups this))
         (generic serialize (mth) (entities)
                  (map (.to-array entities) (ent)
                       (.serialize ent)))
         (generic add (mth) (ent entities)
                  (assign ent.group this)
                  (.add entities ent))
         (generic has (mth) (ent entities)
                  (.has entities ent))
         (generic delete (mth) (ent entities)
                  (.delete entities ent)
                  (.delete ent)
                  )
         (generic remove (mth) (ent entities)
                  (assign ent.group null)
                  (.delete entities ent))
         (generic each (mth) (f entities)
                  (.each entities f) this)
         (generic spawn (fluent mth) (x y color entity-type)
                  (let ent (.spawn entity-type  x y color ))
                  (when ent
                      (assign ent.group this)
                      (this.add ent) ent))
         (generic update (mth) (entities)
                  (each entities (ent) (.update ent))))
(export Entity-group)
