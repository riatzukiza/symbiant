(def euclidian-distance (x y a b)
  (Math.sqrt (+ (Math.pow (- x a) 2) (Math.pow (- y b) 2))))

(export euclidian-distance)

(def square (dim f)

  (var lim (Math.round (/ dim 2)))

  (for ( i (- 0 lim)) (<= i lim) (++ i)
       (for ( j (- 0 lim)) (<= j lim) (++ j)
            (f i j)))
  null)

(macro area-has (diameter spot center area cond)
       `(scoped (var true? false)
                (area  @area @spot @center @diameter
                       (when @cond (assign true? true)))

                true?))
